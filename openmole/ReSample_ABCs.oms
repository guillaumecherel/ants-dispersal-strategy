import _parent_._file_.Fissionv7_1_model._
import _parent_._file_.analyse_Fissionv7_1_model._

val env = EGIEnvironment("vo.complex-systems.eu")

val colony = Val[Int]

//val s = CSVSampling(workDirectory / "resampleABCs_2.csv") set (
val s = CSVSampling(workDirectory / "resampleABCs_3.csv") set (    
  columns += exploring_phase,
  columns += number_nests,
  columns += colony,
  columns += percentage_foragers,
  columns += nest_quality_assessment_error,
  columns += ("input_size", size_initial_colony)
)

//val s2 = s withIndex seed
val s2 = s zip (seed in (UniformDistribution[Int]() take 5000000 ))

//val hook_ReSample = CSVHook(workDirectory / "ResultsReSample_2.csv",  values = Seq(    
val hook_ReSample = CSVHook(workDirectory / "ResultsReSample_3.csv",  values = Seq(        
    // inputs
    seed,exploring_phase,number_nests,colony,size_initial_colony,
    percentage_foragers,nest_quality_assessment_error,
    // output
    raw_resources_new_colonies_10
     ),  arrayOnRow = true 
     )    
    
            
            
            
            
val run = DirectSampling(
  evaluation = Strain(Fission_v7Task) -- (Strain(outputPostProcess) hook(hook_ReSample) ), 
  sampling = s2
)


run on env by 50 
